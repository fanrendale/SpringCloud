
server.port=3101
spring.application.name=transaction-mq-service

# 注册到服务注册中心中，可以使用服务名称来调用服务接口
eureka.client.serviceUrl.defaultZone=http://xjf:123456@localhost:8761/eureka/,http://xjf:123456@localhost:8761/eureka/
# 采用IP注册，点击实例跳转时才会用IP，不然是主机名
eureka.instance.prefer-ip-address=true
# 定义实例ID格式
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}

#spring某个版本之后需要加上这句，否则不会自动执行sql文件
#spring.datasource.initialization-mode=always
# schema.sql中一般存放的是建表语句
#spring.datasource.schema = classpath:table.sql
# data.sql中一般存放的是需要插入更新等sql语句
#spring.datasource.data =  classpath:data.sql

# Druid 配置
spring.datasource.druid.url=jdbc:mysql://localhost:3306/test?useSSL=false&characterEncoding=utf-8&useUnicode=true
spring.datasource.druid.username=root
spring.datasource.druid.password=123456
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver

# 初始化大小，最小，最大
spring.datasource.druid.initialSize=10
spring.datasource.druid.minIdle=10
spring.datasource.druid.maxActive=50
# 配置获取连接等待超时的时间
spring.datasource.druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false
# 定期把监控数据输出到日志中
spring.datasource.druid.timeBetweenLogStatsMillis=300000
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.druid.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=1000